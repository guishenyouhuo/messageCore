<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.message.dao.LoginRecordMapper" >
  <resultMap id="BaseResultMap" type="com.message.domain.LoginRecord" >
    <id column="record_id" property="recordId" jdbcType="INTEGER" />
    <result column="login_num" property="loginNum" jdbcType="VARCHAR" />
    <result column="login_user" property="loginUser" jdbcType="VARCHAR" />
    <result column="login_ip" property="loginIp" jdbcType="VARCHAR" />
    <result column="login_time" property="loginTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    record_id, login_num, login_user, login_ip, login_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from login_record
    where record_id = #{recordId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from login_record
    where record_id = #{recordId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.message.domain.LoginRecord" >
    insert into login_record (record_id, login_num, login_user, 
      login_ip, login_time)
    values (#{recordId,jdbcType=INTEGER}, #{loginNum,jdbcType=VARCHAR}, #{loginUser,jdbcType=VARCHAR}, 
      #{loginIp,jdbcType=VARCHAR}, #{loginTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.message.domain.LoginRecord" >
    insert into login_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="recordId != null" >
        record_id,
      </if>
      <if test="loginNum != null" >
        login_num,
      </if>
      <if test="loginUser != null" >
        login_user,
      </if>
      <if test="loginIp != null" >
        login_ip,
      </if>
      <if test="loginTime != null" >
        login_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="recordId != null" >
        #{recordId,jdbcType=INTEGER},
      </if>
      <if test="loginNum != null" >
        #{loginNum,jdbcType=VARCHAR},
      </if>
      <if test="loginUser != null" >
        #{loginUser,jdbcType=VARCHAR},
      </if>
      <if test="loginIp != null" >
        #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null" >
        #{loginTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.message.domain.LoginRecord" >
    update login_record
    <set >
      <if test="loginNum != null" >
        login_num = #{loginNum,jdbcType=VARCHAR},
      </if>
      <if test="loginUser != null" >
        login_user = #{loginUser,jdbcType=VARCHAR},
      </if>
      <if test="loginIp != null" >
        login_ip = #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null" >
        login_time = #{loginTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where record_id = #{recordId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.message.domain.LoginRecord" >
    update login_record
    set login_num = #{loginNum,jdbcType=VARCHAR},
      login_user = #{loginUser,jdbcType=VARCHAR},
      login_ip = #{loginIp,jdbcType=VARCHAR},
      login_time = #{loginTime,jdbcType=TIMESTAMP}
    where record_id = #{recordId,jdbcType=INTEGER}
  </update>
  
  <select id="selectLoginRecordCount" resultType="java.lang.Integer" >
    select count(1)
    from login_record
    where record_id > 0
    <if test="loginNum != null and loginNum != ''">
    	and login_num = #{loginNum,jdbcType=VARCHAR}
    </if>
    <if test="loginTime != null and loginTime != ''">
    	and login_time like concat('%',#{loginTime,jdbcType=VARCHAR},'%') 
    </if>
  </select>
  
  <select id="selectLoginRecordByPage" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from login_record
    where record_id > 0
    <if test="loginNum != null and loginNum != ''">
    	and login_num = #{loginNum,jdbcType=VARCHAR}
    </if>
    <if test="loginTime != null and loginTime != ''">
    	and login_time like concat('%',#{loginTime,jdbcType=VARCHAR},'%') 
    </if>
    order by record_id desc 
    limit #{startNo,jdbcType=INTEGER} ,#{pageSize,jdbcType=INTEGER}
  </select>
  
</mapper>